<%- include('partials/log_header') -%>

<head>
    <title>Memwa Capture</title>
    <link href="node_modules/cloudinary-video-player/dist/cld-video-player.min.css" rel="stylesheet">
    <link href="https://unpkg.com/cloudinary-video-player@1.9.0/dist/cld-video-player.min.css" rel="stylesheet">
</head>

<main id="capture-page-sec">
    <div class="px-4 py-5 my-5 text-center">
      <img class="d-block mx-auto mb-4" src="/imgs/logo.svg" alt="Memwa" width="120" height="120">
      <h1 class="display-5 fw-bold">Memwa CAPTURE</h1>
      <h5>Record a Story to Memwa</h5> 
      <!-- <div class="col-lg-6 mx-auto">    -->
    </div>
<!-- create post info to go along with capture -->
            <!-- work on making capture straight to streaming work and add entry to mongodb -->
            <div class="px-4 col-4">
                <h4>Record Post</h4>
                <div class="mt-5">
                <form action="/post/createPost" enctype="multipart/form-data" method="POST">
                  <div class="mb-3">
                      <label for="title" class="form-label">Title</label>
                      <input type="text" class="form-control" id="title" name="title" placeholder="Title">
                      <label for="caption" class="form-label">Caption*</label>
                      <textarea class="form-control" id="caption" name="caption"></textarea>
                      <label for="description" class="form-label">Describe Your Content</label>
                      <textarea class="form-control" id="description" style="height:8rem" name="description"></textarea>
                      <label for="status">Status</label>
                      <select name="status" id="status" class="form-select" aria-label="Default select example">
                        <option selected>Select visibility</option>
                        <option value="public" selected>Public</option>
                        <option value="private">Private</option>
                    </select>
                    <input type="file" class="form-control" id="mediaUpload" name="file">
                  </div>

<!-- work or fixing submit path -->
                  <!-- <label for="video-response">Video Response:</label>
                <video id="vid2" controls></video> -->
              
                <!-- <button type="button" id="start-recording-button">Start Recording</button>
                <button type="button" id="stop-recording-button">Stop Recording</button> -->
                <!-- <button type="submit">Submit</button> -->

                <!-- <div class="px-4  py-5 selfCapture-container-page">
                    <div class="recording-box-capture">
                        <p>Press START to record directly from your device</p>
                        <video muted id="video" autoplay></video>
                        <div class="btn-box">  
                            <button type="button" class="btn" id="start-btn" style="background:green" data-bs-toggle="button"><i class="fa fa-video" style="font-size:24px" aria-hidden="true"> Start</i></button>
                            <button class="btn" id="stop-btn" style="background:red"><i class="fa fa-stop-circle" style="font-size:24px" aria-hidden="true"> Stop</i></button> 
                            <p id="message"></p>    
                </div> -->
<!-- this part -->
                  <button type="submit" class="btn btn-primary" value="Upload">Submit</button>
                </form>
              </div>
            </div>

    <div class="px-4  py-5 selfCapture-container-page">
        <div class="recording-box-capture">
            <p>Press START to record directly from your device</p>
            <video muted id="video" autoplay></video>
            <div class="btn-box">  
                <button type="button" class="btn" id="start-btn" style="background:green" data-bs-toggle="button"><i class="fa fa-video" style="font-size:24px" aria-hidden="true"> Start</i></button>
                <button class="btn" id="stop-btn" style="background:red"><i class="fa fa-stop-circle" style="font-size:24px" aria-hidden="true"> Stop</i></button> 
                <p id="message"></p>    
            </div>
            
            

            <!-- <video id="vid2" controls></video>  -->
            

            <div class="btn-box">
                <a class="btn"  id="upload_widget" class="cloudinary-button" style="background:blue"><i class="fa fa-upload" style="font-size:24px" aria-hidden="true"> Upload</i></a>
            </div>
        </div>
    </div> 
</main>
<section id="uploadPageSec" class="px-4 py-5 my-5 text-center">
   <h1 class="display-5 fw-bold">Memwa UPLOAD</h1>
    <div class="col-lg-6 mx-auto">   
    <h5>Upload a Story to Memwa</h5> <p>You can upload videos, pictures, files and other moments from other sources</p>
    <button id="upload_pop" class="cloudinary-button" style="background:blue" style="font-size:24px" aria-hidden="true"> Upload files</button>
</section>

<div class="px-4 py-5 my-5 text-center">
    <a class="btn btn-info" href="/feed">Return to Feed</a>
    <a class="btn btn-info" href="/profile">Return to Profile</a>
</div> 



    <script src="js/record.js" type="text/javascript"></script>
    <script src="https://unpkg.com/cloudinary-video-player@1.9.0/dist/cld-video-player.min.js" 
    type="text/javascript"></script>
     <!-- cloudinary upload widget -->
     <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>
    <script 
     src="/js/upload_widget.js" 
     type="text/javascript">
    </script>
    <script src="node_modules/cloudinary-video-player/dist/cld-video-player.min.js" 
    type="text/javascript"></script>
    <!-- <script>
        // Get access to camera and microphone
        const mediaDevices = navigator.mediaDevices;
        const constraints = { audio: true, video: true };
        const videoElem = document.getElementById('video-response');
        const streamPromise = mediaDevices.getUserMedia(constraints);
      
        // Usable stream
        let stream;
      
        // MediaRecorder
        let mediaRecorder;
      
        // Start recording
        const startRecording = () => {
          mediaRecorder = new MediaRecorder(stream);
          const chunks = [];
      
          mediaRecorder.ondataavailable = (event) => {
            chunks.push(event.data);
          };
      
          mediaRecorder.onstop = () => {
            const blob = new Blob(chunks, { type: 'video/mp4' });
            // Use Axios or fetch to send the file to the server
          };
      
          mediaRecorder.start();
        };
      
        // Stop recording
        const stopRecording = () => {
          mediaRecorder.stop();
        };
      
        // Set up video element source
        streamPromise.then((usableStream) => {
          stream = usableStream;
          videoElem.srcObject = stream;
        });
      
        // Add event listeners to buttons
        const startBtn = document.getElementById('start-recording-button');
        const stopBtn = document.getElementById('stop-recording-button');
        const formElem = document.getElementById('video-form');
      
        startBtn.addEventListener('click', startRecording);
    </script>
  
  
     -->

